specVersion: 1.2.0
description: "V1"
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: UniswapV3Factory
    network: {{ network }}
    source:
      address: '{{ v3.factory.address }}'
      startBlock: {{ v3.factory.startBlock }}
      abi: UniswapV3Factory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - FeeAmountEnabled
        - OwnerChanged
        - PoolCreated
      abis:
        - name: UniswapV3Factory
          file: ./abis/UniswapV3Factory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: UniswapV3Pool
          file: ./abis/UniswapV3Pool.json
        - name: NonfungiblePositionManager
          file: ./abis/NonfungiblePositionManager.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
      eventHandlers:
        - event: FeeAmountEnabled(indexed uint24,indexed int24)
          handler: handleFeeAmountEnabled
        - event: OwnerChanged(indexed address,indexed address)
          handler: handleOwnerChanged
        - calls:
            token0Decimals: 'ERC20[event.params.token0].decimals()'
            token0Name: 'ERC20[event.params.token0].name()'
            token0Supply: 'ERC20[event.params.token0].totalSupply()'
            token0Symbol: 'ERC20[event.params.token0].symbol()'
            token1Decimals: 'ERC20[event.params.token1].decimals()'
            token1Name: 'ERC20[event.params.token1].name()'
            token1Supply: 'ERC20[event.params.token1].totalSupply()'
            token1Symbol: 'ERC20[event.params.token1].symbol()'
          event: PoolCreated(indexed address,indexed address,indexed uint24,int24,address)
          handler: handlePoolCreated
      file: ./src/uniswap-v-3-factory.ts
  - kind: ethereum
    name: NonfungiblePositionManager
    network: {{ network }}
    source:
      address: '{{ v3.positionManager.address }}'
      startBlock: {{ v3.positionManager.startBlock }}
      abi: NonfungiblePositionManager
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Approval
        - ApprovalForAll
        - NonfungiblePositionManagerCollect
        - DecreaseLiquidity
        - IncreaseLiquidity
        - Transfer
      abis:
        - name: NonfungiblePositionManager
          file: ./abis/NonfungiblePositionManager.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - calls:
            positions: >-
              NonfungiblePositionManager[event.address].positions(event.params.tokenId)
          event: 'Collect(indexed uint256,address,uint256,uint256)'
          handler: handleCollect
          receipt: true
        - calls:
            positions: >-
              NonfungiblePositionManager[event.address].positions(event.params.tokenId)
          event: 'DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)'
          handler: handleDecreaseLiquidity
        - calls:
            positions: >-
              NonfungiblePositionManager[event.address].positions(event.params.tokenId)
          event: 'IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)'
          handler: handleIncreaseLiquidity
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/nonfungible-position-manager.ts
templates:
  - kind: ethereum
    name: UniswapV3Pool
    network: {{ network }}
    source:
      abi: UniswapV3Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Burn
        - Collect
        - CollectProtocol
        - Flash
        - IncreaseObservationCardinalityNext
        - Initialize
        - Mint
        - SetFeeProtocol
        - Swap
      abis:
        - name: UniswapV3Pool
          file: ./abis/UniswapV3Pool.json
      eventHandlers:
        - event: >-
            Burn(indexed address,indexed int24,indexed
            int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: Collect(indexed address,address,indexed int24,indexed int24,uint128,uint128)
          handler: handleCollect
        - event: CollectProtocol(indexed address,indexed address,uint128,uint128)
          handler: handleCollectProtocol
        - calls:
            Flash.feeGrowthGlobal0X128: 'UniswapV3Pool[event.address].feeGrowthGlobal0X128()'
            Flash.feeGrowthGlobal1X128: 'UniswapV3Pool[event.address].feeGrowthGlobal1X128()'
          event: >-
            Flash(indexed address,indexed
            address,uint256,uint256,uint256,uint256)
          handler: handleFlash
        - event: IncreaseObservationCardinalityNext(uint16,uint16)
          handler: handleIncreaseObservationCardinalityNext
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: >-
            Mint(address,indexed address,indexed int24,indexed
            int24,uint128,uint256,uint256)
          handler: handleMint
          receipt: true
        - event: SetFeeProtocol(uint8,uint8,uint8,uint8)
          handler: handleSetFeeProtocol
        - calls:
            Swap.feeGrowthGlobal0X128: 'UniswapV3Pool[event.address].feeGrowthGlobal0X128()'
            Swap.feeGrowthGlobal1X128: 'UniswapV3Pool[event.address].feeGrowthGlobal1X128()'
          event: >-
            Swap(indexed address,indexed
            address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
      file: ./src/uniswap-v-3-pool.ts